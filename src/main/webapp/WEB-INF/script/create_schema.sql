CREATE TABLE users (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
                    firstName VARCHAR(255),
                    lastName VARCHAR(255),
                    email VARCHAR(255),
                    password VARCHAR(255) NOT NULL,
                    roles VARCHAR(255));
CREATE TABLE accounts (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
					 userId INT,
					 money DOUBLE,
					 FOREIGN KEY (userId) REFERENCES users (id));
CREATE TABLE auditoriums (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	                   name VARCHAR(255),
	                   numberOfSeats VARCHAR(255),
	                   isAssign BOOLEAN);                    
CREATE TABLE events (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
                     name VARCHAR(255),
                     airDateTime TIMESTAMP,
                     basePrice DOUBLE,
                     rating VARCHAR(255),
                     auditoriumId INT,
                     FOREIGN KEY (auditoriumId) REFERENCES auditoriums (id));
CREATE TABLE tickets (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
                     eventId INT,
                     userId INT,
                     seat INT,
                     ticketPrice INT, 
                     isPurchased BOOLEAN,
                     FOREIGN KEY (eventId) REFERENCES events (id),
                     FOREIGN KEY (userId) REFERENCES users (id));
CREATE TABLE counters (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
                       counterType VARCHAR(255),
                       keyName VARCHAR(255),
                       valueCounter VARCHAR(255));
CREATE TABLE vipSeats (id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
					   place VARCHAR(255),
					   auditoriumId INT,
					   FOREIGN KEY (auditoriumId) REFERENCES auditoriums (id)); 
create table persistent_logins (
  username VARCHAR(64) NOT NULL ,
  series VARCHAR(64) NOT NULL PRIMARY KEY,
  token VARCHAR(64) NOT NULL ,
  last_used TIMESTAMP NOT NULL
)
 